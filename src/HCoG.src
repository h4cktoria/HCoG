#include Debugging.src

// This is soo ridiculous omg
// Those who read this source code - I am so sorry
// but with OOP it would be even worser, believe me
_styling = {}
_styling.buttonSelectedPrefix = "> "
_styling.buttonSelectedPostfix = ""
_styling.buttonPrefix = "- "
_styling.buttonPostfix = ""
_styling.labelPrefix = "| "
_styling.labelPostfix = ""

_styling.setStyle = function(styleOption, styleValue)
	assert(styleOption isa string)
	assert(styleOption isa string)
	_stylingp[styleOption] = styleValue
end function

_controls = {}
_controls.up = "uparrow"
_controls.down = "downarrow"
_controls.left = "leftarrow"
_controls.right = "rightarrow"

_controls.back = "rightshift"

_controls.choose = "rightcontrol"

setControls = function(controlsName, key)
	doesExist = false

	for pair in _controls
		if pair.key == controlsName then
			doesExist = true
			break
		end if

	end for

	assert(doesExist == true)
	_controls[controlsName] = key
end function

_keyboard = {}
_keyboard.lastPressed = char(0)

getch = function()
	return user_input(char(0), false, true).lower
end function

nogetch = function()
	_button.iter = 0
	_button.current = 0
	_logic.stopIter = true
end function

getLastGetch = function()
	return _keyboard.lastPressed
end function

_button = {}
_button.iter = 0
_button.current = 0

button = function(text, callback)
	assert(text isa string)

	assert(typeof(@callback) == "function")

	if _button.iter == _button.current then
		text = _styling.buttonSelectedPrefix + text + _styling.buttonSelectedPostfix

		if _keyboard.lastPressed == _controls.choose then
			_keyboard.lastPressed = char(0)
			_button.iter = 0
			_button.current = 0
			wrapper(@callback)
			_logic.nogetch = true
		end if
	else
		text = _styling.buttonPrefix + text + _styling.buttonPostfix
	end if

	print(text)
	_button.iter = _button.iter + 1
end function

label = function(text)
	assert(text isa string)
	print(_styling.labelPrefix + text + _styling.labelPostfix)
end function

_logic = {}
_logic.nogetch = false
_logic.stopIter = false

wrapper = function(tuiFunction)
	assert(typeof(@tuiFunction) == "function")

	while true
		_button.iter = 0
		clear_screen
		tuiFunction

		if _logic.stopIter == true then
			_logic.stopIter = false
			break
		end if

		if _logic.nogetch == true then
			_logic.nogetch = false
			continue
		end if

		_keyboard.lastPressed = getch

		if _keyboard.lastPressed == _controls.back then
			_keyboard.lastPressed = char(0)
			_button.current = 0
			break
		end if

		if _keyboard.lastPressed == _controls.up then
			if _button.current <= 0 then
				_button.current = 0
			else
				_button.current = _button.current - 1
			end if

		else if _keyboard.lastPressed == _controls.down then
			if _button.current >= _button.iter - 1 then
				_button.current = _button.iter - 1
			else
				_button.current = _button.current + 1
			end if

		end if

		yield
	end while

end function
